---
- name: EXOS Operation box
  hosts: extreme
  gather_facts: no
  vars: 
   - vendor: "Extreme Networks"
   
   
  tasks:
    - name: Make Backup Directory
      local_action:
        module: file
        path: "/etc/ansible/backup_ext/{{ lookup('pipe', 'date +%Y%m%d') }}"
        state: directory
        mode: u=rwX,g=rX,o=rX

    - name: Cli show output
      ios_command:
        commands:
          - command: "top"
            prompt: 'q'
            answer: 'q'
      register: top

    - name: CLi show output(2)
      ios_command:
        commands:
          - disable clipaging
          - "show version | grep IMG"
          - "show fans"
          - "show memory | grep Total"
          - show memory | grep System\s+\(KB\)
          - "show memory | grep User"
          - "show memory | grep Free"
          - "show memory"
          - "show temperature"
          - "show power"
          - show system | grep System\s+Type
          - show switch | grep System\s+UpTime
          - show port rxerrors no-refresh
          - show version | grep Switch
      register: show

    - name: show_backup
      local_action:
        copy content="\n#####{{ inventory_hostname }}#####\n{{ show.stdout[1] }}\n\n{{ show.stdout[2] }}\n\n{{ show.stdout[3] }}\n{{ show.stdout[4] }}\n{{ show.stdout[5] }}\n{{ show.stdout[6] }}\n\n{{ show.stdout[7] }}\n\n\{{ show.stdout[8] }}\n\n\{{ show.stdout[9] }}\n\n{{ show.stdout[10] }}\n\n{{ show.stdout[11] }}\n\n{{ show.stdout[12] }}\n\n{{ top.stdout[0] }}"
        dest=/etc/ansible/backup_ext/{{ lookup('pipe', 'date +%Y%m%d') }}/{{ inventory_hostname }}.text

    - name: show_backup_portstate
      local_action:
        copy content="{{ show.stdout[11] }}"
        dest=/etc/ansible/backup_ext/{{ lookup('pipe', 'date +%Y%m%d') }}/{{ inventory_hostname }}_port.text

    - name: arithmetic facs
      set_fact: set="{{ (show.stdout[4]|regex_search('\d+')|int + show.stdout[5]|regex_search('\d+')|int) / show.stdout[3]|regex_search('\d+')|int * 100}}"

    - name: memory utility compare
      debug: msg="{% if set|regex_search('\d+')|int < 60 %} MEM state OK {% else %} MEM state check {% endif %}"
      register: Memory_state

    - name: Fan state check
      debug: msg="{% if show.stdout[2] in 'Failed' %} 비정상 {% else %} 정상 {% endif %}"
      register: Fan_state

    - name: Temp state check
      debug: msg="{% if 'Normal' in show.stdout[8] %} 정상  {% else %} 비정상 {% endif %}"
      register: Temp_state

    - name: Power state check
      debug: msg="{% if 'Failed' in show.stdout[10] %} PWR state Check {% else %} PWR state OK {% endif %}"
      register: Power_state

    - name: Read file in PORT
      shell: cat /etc/ansible/backup_ext/{{ lookup('pipe', 'date +%Y%m%d') }}/{{ inventory_hostname }}_port.text | grep -o '[0-9]'* | awk '{if ($0<100) { print "OK" } else { print "Check" } }'
      ignore_errors: True
      register: port

    - name: Read file in CPU
      shell: cat /etc/ansible/backup_ext/$(date +%Y%m%d)/{{ inventory_hostname }}.text | grep 'CPU\:' |awk '{print $2}'
      register: CPU

    - name: Read file in MODEL
      shell: cat /etc/ansible/backup_ext/$(date +%Y%m%d)/{{ inventory_hostname }}.text | grep 'System Type' | awk '{print $3}'
      register: MODEL

    - name: Read file in VERSION
      shell: cat /etc/ansible/backup_ext/$(date +%Y%m%d)/{{ inventory_hostname }}.text | grep 'IMG:' | awk '{print $10}'
      register: VERSION

    - name: Read file in UPTIME
      shell: cat /etc/ansible/backup_ext/$(date +%Y%m%d)/{{ inventory_hostname }}.text | grep 'System UpTime' | awk '{print $3}'
      register: UPTIME

    - name: CPU check
      debug: msg={{ CPU.stdout }}

    - name: CPU utility compare
      debug: msg="{% if CPU.stdout|regex_search('\d+')|int < 60 %} 정상 {% else %} 비정상 {% endif %}"
      register: CPU_state

    - name: PORT Error compare
      debug: msg="{% if port.stdout in "Check" %} 비정상 {% else %} 정상 {% endif %}"
      register: PORT_state

    - name: Make Result Directory
      local_action:
        module: file
        path: "/etc/ansible/result_ext/{{ lookup('pipe', 'date +%Y%m%d') }}"
        state: directory
        mode: u=rwX,g=rX,o=rX

    - name: show_Result
      local_action:
        copy content="{{ inventory_hostname }} | {{ vendor}} | {{ MODEL.stdout }} |{{ Temp_state }}|{{ CPU_state }}|{{ Fan_state }}| {{ VERSION.stdout }} | {{ UPTIME.stdout }} | {{ CPU.stdout |regex_search('\d*')|int }} | {{ set|regex_search('\d*')|int }} | {{ PORT_state }} | {{ Memory_state }} | {{ Power_state }}  |"
        dest=/etc/ansible/result_ext/{{ lookup('pipe', 'date +%Y%m%d') }}/{{ inventory_hostname }}.text

    - name: Result modify
      replace:
        path: /etc/ansible/result_ext/{{ lookup('pipe', 'date +%Y%m%d') }}/{{ inventory_hostname }}.text
        regexp: "', 'failed': False, 'changed': False}"
        replace: ""

    - name: Result modify2
      replace:
        path: /etc/ansible/result_ext/{{ lookup('pipe', 'date +%Y%m%d') }}/{{ inventory_hostname }}.text
        regexp: "{'msg': '"
        replace: ""

    - name: Assemble Result Summary
      assemble:
        src: "/etc/ansible/result_ext/{{ lookup('pipe', 'date +%Y%m%d') }}/"
        dest: "/etc/ansible/{{ lookup('pipe', 'date +%Y%m%d') }}_Result_Summary_EXOS.txt"

    - name: Read users from CSV file and return a list
      copy:
        src: "/etc/ansible/{{ lookup('pipe', 'date +%Y%m%d') }}_Result_Summary_EXOS.txt"
        remote_src: yes
        dest: "/etc/ansible/{{ lookup('pipe', 'date +%Y%m%d') }}_Result_Summary_EXOS.csv"


